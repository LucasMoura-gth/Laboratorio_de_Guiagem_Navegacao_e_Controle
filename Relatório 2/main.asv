%Problema de dois corpos

%Constantes
mi_Terra = 3.986*(10^5); %km3/s2

%-----------------------------------------------------------

%Resolucoes

%Item a
%two lines: 2 07276 64.2707 228.5762 6489050 281.4937 16.8767 2.45097347248963

%Convers?o da anomalia media para verdadeira
%theta_a = 16.8767
theta_a = converter_anomalia_media_verdadeira(deg2rad(16.8767), 0.6489050);

%Semieixo maior
[semieixo_a, n_a] = semieixoMaior(mi_Terra, 2.4509);

%Coordenada Orbital
[xo_a, yo_a, zo_a] = dirOrbital(deg2rad(theta_a), 0.6489050, semieixo_a);

%Coordenada Inercial
coordInercial_a = matrizTranspostaRotacao(deg2rad(64.2707), deg2rad(281.4937), deg2rad(228.5762)) * [xo_a; yo_a; zo_a];

%Velocidade Orbital
[vx_a, vy_a, vz_a] = velOrbital(n_a, 0.6489, deg2rad(theta_a),semieixo_a);

%Velocidade Inercial
velocidadeInercial_a = matrizTranspostaRotacao(deg2rad(64.2707), deg2rad(281.4937), deg2rad(228.5762)) * [vx_a; vy_a; vz_a];

%--------------------------------------------------------

%item b
%two lines: 2 02717 0.7404 32.0789 0014515 234.9766 357.1212 1.00360058109167

%Convers?o da anomalia media para verdadeira
%theta_b = 357.1212
theta_b = converter_anomalia_media_verdadeira(deg2rad(357.1212),0.0014515);

%Semieixo maior
[semieixo_b, n_b] = semieixoMaior(mi_Terra, 1.0036);


%Coordenada Orbital
[xo_b, yo_b, zo_b] = dirOrbital(deg2rad(theta_b), 0.0014515, semieixo_b);

%Coordenada Inercial
coordInercial_b = matrizTranspostaRotacao(deg2rad(0.7404), deg2rad(234.9766), deg2rad(32.0789)) * [xo_b; yo_b; zo_b];

%Velocidade Orbital
[vx_b, vy_b, vz_b] = velOrbital(n_b, 0.0014515, deg2rad(theta_b), semieixo_b);

%Velocidade Inercial
velocidadeInercial_b = matrizTranspostaRotacao(deg2rad(0.7404), deg2rad(234.9766), deg2rad(32.0789)) * [vx_b; vy_b; vz_b];

%Aplicacaoo do processo de integracao
%ODE 45

%Dados do Item a
T_a = 2*pi/n_a;
r_a = coordInercial_a';
v_a = velocidadeInercial_a';

%Dados do Item b
T_b = 2*pi/n_b;
r_b = coordInercial_b';
v_b = velocidadeInercial_b';

%Condicao inicial do item A
InitCond = [r_a v_a];

%Condicao inicial do item B
InitCond2 = [r_b v_b];

%Solucoes ODE45 (Possivel modificar e multiplicar T_a e T_b (quantidade de periodos))
options = odeset('RelTol',1e-12); %minimizacao do erro 

%Item a:
[Times,Out] = ode45(@edos, [0 1*T_a], InitCond, options);

%Sistema de tempo
y = 1970+22;
m = 6;
d= 7;
UT = 0.20*24; %two lines
J0 = 367*y - fix(((7*(y + (fix((m+9)/12))))/(4))) + fix(275*m/9) + d + 1721013.5  ;
Dj = J0;
Sj = (Dj - 2415020)/36525;
thetag_0 = (((99.6909833 + 36000.7689*Sj + 0.00038708*Sj^2)/360) - fix((99.6909833 + 36000.7689*Sj + 0.00038708*Sj^2)/360)) * 360;
theta_g = ((thetag_0 + 360.98564724*UT/24)/360 - fix((thetag_0 + 360.98564724*UT/24)/360) ) * 360;

N = length(Out);
w = 0.00007272; %rad/s
delta_t = T_a/(N-1);
thetag0 = deg2rad(theta_g);
theta_long = ones(N,1);

for j=0:(N-1)
    theta_long(j+1,1) = thetag0 + j*w*delta_t;
end

r1 = Out(:,1);
r2 = Out(:,2);
r3 = Out(:,3);
lat = rad2deg(asin(r3./(sqrt(r1.^2 + r2.^2 + r3.^2))));
long = rad2deg(atan(r2./r1)) - rad2deg(theta_long);

%Correção para a tangente
for i=1:N
    if r1(i,1) < 0
        if long (i,1) < 0
            long(i,1) = (((long(i,1) - 180)/360) - fix(((long(i,1) - 180)/360))) *360;
        else
            long(i,1) = ((long(i,1) + 180)/360 - fix((long(i,1) + 180)/360)) *360 ;
        end
    end
end

worldmap('World')
load coastlines
plotm(coastlat,coastlon)
hold on

%Plotar gráfico ground track
plotm(-lat,long, 'red')
hold off



%Solucao para o item b
[Times2,Out2] = ode45(@edos, [0 1*T_b], InitCond2, options);

%Sistema de tempo
y = 1970+22;
m = 6;
d= 8;
UT = 0.7*24; %two lines
J0 = 367*y - fix(((7*(y + (fix((m+9)/12))))/(4))) + fix(275*m/9) + d + 1721013.5  ;
Dj = J0;
Sj = (Dj - 2415020)/36525;
thetag_0 = (((99.6909833 + 36000.7689*Sj + 0.00038708*Sj^2)/360) - fix((99.6909833 + 36000.7689*Sj + 0.00038708*Sj^2)/360)) * 360;
theta_g = ((thetag_0 + 360.98564724*UT/24)/360 - fix((thetag_0 + 360.98564724*UT/24)/360) ) * 360;

N = length(Out2);
w = 0.00007272; %rad/s
delta_t = T_b/(N-1);
thetag0 = deg2rad(theta_g);
theta_long = ones(N,1);

for j=0:(N-1)
    theta_long(j+1,1) = thetag0 + j*w*delta_t;
end

r1 = Out2(:,1);
r2 = Out2(:,2);
r3 = Out2(:,3);
lat = rad2deg(asin(r3./(sqrt(r1.^2 + r2.^2 + r3.^2))));
long = rad2deg(atan(r2./r1)) - rad2deg(theta_long);

%Correção para a tangente
for i=1:N
    if r1(i,1) < 0
        if long (i,1) < 0
            long(i,1) = (((long(i,1) - 180)/360) - fix(((long(i,1) - 180)/360))) *360;
        else
            long(i,1) = ((long(i,1) + 180)/360 - fix((long(i,1) + 180)/360)) *360 ;
        end
    end
end

%sworldmap('World')
%load coastlines
%plotm(coastlat,coastlon)
%hold on

%Plotar gráfico ground track
%plotm(-lat,long, 'red')
%hold off

%correcao de quadrante e theta_g
%inercial para terrestre por matriz de rotacao em z (theta_g)

%sistema de tempo
%Tempo Solar (24h)
%Tempo Sideral de Greenwich

%Descreva o problema em termos de suas equações diferenciais em coordenadas
%cartesianas, sabendo que o twolines é dado por:
%Condições Iniciais:
%a)
%1 07276U 74026A 22158.20205273 .00000124 00000+0 00000+0 0 9995
%2 07276 64.2707 228.5762 6489050 281.4937 16.8767 2.45097347248963
%b) 
%1 02717U 67026A 22159.70244616 -.00000351 00000+0 00000+0 0 9995
%2 02717 0.7404 32.0789 0014515 234.9766 357.1212 1.00360058109167
%https://nsidc.org/data/user-resources/help-center/day-year-doy-calendar











